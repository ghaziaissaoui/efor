@use 'sass:list';
@use 'sass:meta';
@use 'front/config/sass' as *;
@use 'front/abstract/grid-system/variables' as gs;
@use 'front/abstract/grid-system/functions' as *;
@use 'front/abstract/grid-system/mixins' as *;

/*
  Index
  ---------- ---------- ---------- ---------- ----------
  • Variable(s)
  • Prep.
  • Simple toggle classes
*/

/*
  • Variable(s)
  ---------- ---------- ---------- ---------- ----------
*/

$-loop-iterations: 20;
$-loop-additions: (('gs-gutter', var(--gs-gutter)), 10);

/*
  • Prep.
  ---------- ---------- ---------- ---------- ----------
*/

$-loop: (0);

@for $-i from 1 to ($-loop-iterations + 1) {
  $-loop: list.join($-loop, ($-i - 0.5, $-i), $separator: comma);
}

@each $-i in $-loop-additions {
  @if list.index($-loop, $-i) == null {
    $-loop: list.append($-loop, $-i, $separator: comma);
  }
}

@debug $-loop;

/*
  • Simple toggle classes
  ---------- ---------- ---------- ---------- ----------
*/

@each $-i in $-loop {
  $-value-index: if(meta.type-of($-i) == 'list', str-replace(".", "\\.", list.nth($-i, 1) + ""), str-replace(".", "\\.", $-i + ""));
  $-value: if(meta.type-of($-i) == 'list', list.nth($-i, 2), $-i);

  .u-padding-#{$-value-index} { padding: calc-space($-value) !important; }
}

@each $-i in $-loop {
  $-value-index: if(meta.type-of($-i) == 'list', str-replace(".", "\\.", list.nth($-i, 1) + ""), str-replace(".", "\\.", $-i + ""));
  $-value: if(meta.type-of($-i) == 'list', list.nth($-i, 2), $-i);

  .u-padding-l-#{$-value-index} { padding-left: calc-space($-value) !important; }
  .u-padding-r-#{$-value-index} { padding-right: calc-space($-value) !important; }
  .u-padding-t-#{$-value-index} { padding-top: calc-space($-value) !important; }
  .u-padding-b-#{$-value-index} { padding-bottom: calc-space($-value) !important; }
}

@each $-slug, $-obj in gs.$breakpoints {
  $-prefix: get-breakpoint-prefix($-obj);
  $-value: get-breakpoint-value($-obj);

  @include up($-value) {
    @each $-i in $-loop {
      $-value-index: if(meta.type-of($-i) == 'list', str-replace(".", "\\.", list.nth($-i, 1) + ""), str-replace(".", "\\.", $-i + ""));
      $-value: if(meta.type-of($-i) == 'list', list.nth($-i, 2), $-i);

      .#{$-prefix}u-padding-#{$-value-index} { padding: calc-space($-value) !important; }
    }

    @each $-i in $-loop {
      $-value-index: if(meta.type-of($-i) == 'list', str-replace(".", "\\.", list.nth($-i, 1) + ""), str-replace(".", "\\.", $-i + ""));
      $-value: if(meta.type-of($-i) == 'list', list.nth($-i, 2), $-i);

      .#{$-prefix}u-padding-l-#{$-value-index} { padding-left: calc-space($-value) !important; }
      .#{$-prefix}u-padding-r-#{$-value-index} { padding-right: calc-space($-value) !important; }
      .#{$-prefix}u-padding-t-#{$-value-index} { padding-top: calc-space($-value) !important; }
      .#{$-prefix}u-padding-b-#{$-value-index} { padding-bottom: calc-space($-value) !important; }
    }
  }
}
